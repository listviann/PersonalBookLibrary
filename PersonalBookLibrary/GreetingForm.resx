<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="appLogo_pictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>